name: Build and Deploy

on:
  push:
    branches: 
      - development
      - feature/k8s

env:
  ENV: ${{ secrets.ENV }}
  NAMESPACE: ${{ secrets.NAMESPACE }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
  SERVICE_CLUSTER_PORT: ${{ secrets.SERVICE_CLUSTER_PORT }}
  DOCKER_PORT: ${{ secrets.DOCKER_PORT }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  MEMORY_REQUEST: ${{ secrets.MEMORY_REQUEST }}
  CPU_REQUEST: ${{ secrets.CPU_REQUEST }}

jobs:
  build_push:
    # needs: tests
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          role-session-name: GitHubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build
        run: | 
          aws ecr describe-repositories --repository-names "$GITHUB_REPOSITORY" || aws ecr create-repository --repository-name "$GITHUB_REPOSITORY"
          docker pull $DOCKER_REGISTRY/$GITHUB_REPOSITORY:latest || true
          docker build --cache-from $DOCKER_REGISTRY/$GITHUB_REPOSITORY:latest -t $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$GITHUB_SHA . -f ./build/Dockerfile
          docker tag "$DOCKER_REGISTRY/$GITHUB_REPOSITORY:$GITHUB_SHA" $DOCKER_REGISTRY/$GITHUB_REPOSITORY:latest
          docker push "$DOCKER_REGISTRY/$GITHUB_REPOSITORY" -a

  deploy_dev:
    needs: build_push
    environment: development
    runs-on: ubuntu-latest
    if: contains(github.ref, 'develop')
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      DOMAIN_APPLICATION: ${{ secrets.DOMAIN_APPLICATION }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      MEMORY_LIMIT: ${{ secrets.MEMORY_LIMIT }}
      CPU_LIMIT: ${{ secrets.CPU_LIMIT }}
      ARN_CERTIFICATE: ${{ secrets.ARN_CERTIFICATE }}
      SUBNETS: ${{ secrets.SUBNETS }}
      ## environments application
      PORT: ${{ secrets.PORT }}
      SWAGGER_URL: ${{ secrets.SWAGGER_URL }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          role-session-name: GitHubActions

      - name: Deploy AWS
        run: | 
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
          /usr/local/bin/eksctl utils write-kubeconfig --kubeconfig .kubeconfig --cluster $CLUSTER_NAME --region $AWS_DEFAULT_REGION
          bash -c "cat k8s/*.{yml,yaml}" | envsubst - | kubectl --kubeconfig=.kubeconfig apply -f -
          kubectl --kubeconfig=.kubeconfig rollout status --timeout=1m -w deployment $REPO_NAME -n $NAMESPACE

  deploy_prod:
    needs: build_push
    environment: Production
    runs-on: ubuntu-latest
    if: contains(github.ref, 'main')
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      DOMAIN_APPLICATION: ${{ secrets.DOMAIN_APPLICATION }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      MEMORY_LIMIT: ${{ secrets.MEMORY_LIMIT }}
      CPU_LIMIT: ${{ secrets.CPU_LIMIT }}
      ARN_CERTIFICATE: ${{ secrets.ARN_CERTIFICATE }}
      SUBNETS: ${{ secrets.SUBNETS }}
      ## environments application
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PORT: ${{ secrets.PORT }}
      VERSION: ${{ secrets.VERSION }}
      WRITE_PERMISSION_API_TOKEN: ${{ secrets.WRITE_PERMISSION_API_TOKEN }}
      READ_PERMISSION_API_TOKEN: ${{ secrets.READ_PERMISSION_API_TOKEN }}
      WRITE_READ_PERMISSION_API_TOKEN: ${{ secrets.WRITE_READ_PERMISSION_API_TOKEN }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          role-session-name: GitHubActions

      - name: Deploy AWS
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
          /usr/local/bin/eksctl utils write-kubeconfig --kubeconfig .kubeconfig --cluster $CLUSTER_NAME --region $AWS_DEFAULT_REGION
          cat k8s/*.{yml,yaml} | envsubst - | kubectl --kubeconfig=.kubeconfig apply -f -
          kubectl --kubeconfig=.kubeconfig rollout status --timeout=1m -w deployment $REPO_NAME -n $NAMESPACE
